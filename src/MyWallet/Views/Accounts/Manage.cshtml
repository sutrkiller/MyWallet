@model ManageUserCreateViewModel

@{
    ViewBag.Title = "Manage account";
}

@*@if (TempData["Message"]!=null)*@
@*{*@
@*    <div class="alert alert-success">*@
@*        <button class="close" type="button" data-dismiss="alert">×</button>*@
@*        <strong>@TempData["Message"]</strong>*@
@*    </div>  *@
@*}*@



<div class="widget widget-table action-table" style="margin-bottom: 0px; padding-top: 10px;">

    <div class="widget-header">
        <i class="icon-user"></i>
            <h3 class="marginHack">@Html.DisplayFor(model => model.Name) </h3>


        </div>
        <div class="widget-content">
            <br />

            <form asp-action="Edit">
                <div class="form-horizontal">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    

                    <div class="form-group">
                        <label asp-for="Email" class="col-md-2 control-label"></label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Email, new { readOnly = "readOnly", @class = "form-control col-md-2", style = "possition-relative: center;" })
                        </div>

                    </div>

                    <div class="form-group">
                        <label asp-for="CurrencyId" class="col-md-2 control-label">Preferred currency</label>
                        <div class="col-md-10">
                            <select id="currency" asp-for="CurrencyId" asp-items="@Model.CurrenciesList" class="form-control" onchange="select('@Model.OriginalCurrencyId');"></select>
                            <span asp-validation-for="CurrencyId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Groups" class="col-md-2 control-label">Member of groups</label>
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => Model.Groups, Model.NumberGroups, 1,  new { readOnly = "readOnly", @class = "form-control col-md-2", style = "possition-relative: center;"})
                        </div>
                        
                    </div>


                    <div class="form-group ">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.HiddenFor(x => x.Email)
                            @Html.HiddenFor(x => x.Name)
                            @Html.HiddenFor(x => x.OriginalCurrencyId)
                            <input class="btn btn-success confirmButton" style="display: none" type="submit" value="Save changes" />
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script type="text/javascript">
        function select(original) {
            $(".confirmButton").each(function () {
                var input = $(this);
                var cur = $("#currency").val();

                if (cur === original) {
                    input.hide();
                } else {
                    input.show();
                    input.after("<br/><span>" + original.val() + "</span>");
                }



            });
        }

    </script>
